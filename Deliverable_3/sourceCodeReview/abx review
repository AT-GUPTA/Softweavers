Function Name: Exponent Function ab^x
Written By: Ruksmita
Reviewed By: Atul
------------------------------------------------------------------------------------------------------------------------------------------------
CODE CHECKS
Are comments helpful?
Yes

Is there domain validation and error handling for incorrect input?
Yes

Does it have the correct types (BigDecimal and BigInteger) for parameters and return type?
Yes

Are variables descriptively named and follow naming conventions?
Yes

Is the code readable and easy to understand or follow?
Yes

Is it redundant?
No

Is the code overcomplicated or too clever?
No

Is it possible to reduce the complexity of the code?
No

Does the method use any prebuilt functions?
Yes, only the standard basic-arithmetic prebuilt functions were used.
BigDecimal.add()
BigDecimal.subtract()
BigDecimal.multiply()
BigDecimal.divide()
BigDecimal.remainder()
BigDecimal.abs()
BigDecimal.compareTo()
BigDecimal.valueOf()

------------------------------------------------------------------------------------------------------------------------------------------------
Notes:
-Variable test is initialized but never used in the subordinate function `power`
-Precision is not supplied to BigDecimal.divide() method
-Method call to create a new BigDecimal follows an old way. Instead of new BigDecimal(value), BigDecimal.valueOf(value) should be used.

Extra Notes:
-Function calls subordinate power function.

------------------------------------------------------------------------------------------------------------------------------------------------

Response from Ruksmita:

Comment : Variable test is initialized but never used in the subordinate function `power`.
Response : This issue was adressed.

Comment : Precision is not supplied to BigDecimal.divide() method.
Response : Precision should not be applied to any intermediate operation (including divison) as it would create a loss of accuraccy. 
The precision should only be set on the result of the function.

Comment : Method call to create a new BigDecimal follows an old way. Instead of new BigDecimal(value), BigDecimal.valueOf(value) should be used.
Response : This issue was adressed. Two occurrences of "new BigDecimal" remains as they are necessary due to initializing a BigDecimal from a string value.
